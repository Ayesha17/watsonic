<<<<<<< HEAD
{"version":3,"sources":["../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/pages/home/home.ts","../../src/watsonServices/watsonVisualRecognition/watsonVisualRecognition.service.ts","../../src/watsonServices/watsonTranslation/watsonTranslation.service.ts","../../src/watsonServices/watsonConversation/watsonConversation.service.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/watsonServices/watson.config.ts","../../src/watsonServices/watson.module.ts","../../src/watsonServices/auth.service.ts","../../src/watsonServices/watsonToneAnalyzer/watsonToneAnalyzer.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 161;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 161\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 206;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 206\n// module chunks = 0","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { watsonVisualRecognition } from '../../watsonServices/watsonVisualRecognition/watsonVisualRecognition.service'\nimport { watsonTranslation } from '../../watsonServices/watsonTranslation/watsonTranslation.service'\nimport { watsonConversation } from '../../watsonServices/watsonConversation/watsonConversation.service'\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n  public show: any = \"\"\n  public randomImage: string = \"https://d17fnq9dkz9hgj.cloudfront.net/uploads/2012/11/144966156-adoptable-cat-photo-tips-632x475.jpg\"\n  public url: string = \"https://d17fnq9dkz9hgj.cloudfront.net/uploads/2012/11/144966156-adoptable-cat-photo-tips-632x475.jpg\";\n  constructor(public WatsonConversation: watsonConversation,public navCtrl: NavController, public WatsonVisualRecognition: watsonVisualRecognition, public WatsonTranslation: watsonTranslation) {\n\n  }\n  ionViewDidLoad() {\n    this.WatsonConversation.getWorkspace().subscribe((data) => {\n      console.log('data', data);\n    },\n      (error) => {\n        console.log(error);\n      });\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { WatsonConfig } from '../watson.config';\nimport { Headers, Http, RequestOptions, Response } from '@angular/http';\nimport { error } from 'util';\n@Injectable()\nexport class watsonVisualRecognition {\n \n    public parameters: any;\n    public params: any;\n    public temp:any;\n\n    public constructor(public http: Http) {\n        this.parameters = {};\n        this.params = {};\n    }\n\n    public getVisualRecognitonDataByOnlyURL(url): Observable<any> {\n        const link = WatsonConfig.authURL.wantsonVisualRecognition.baseLinkClassify +\n            WatsonConfig.authURL.wantsonVisualRecognition.api_key.toString() + \"&url=\" +\n            url +\n            \"&version=\" + WatsonConfig.authURL.wantsonVisualRecognition.version_date.toString()\n            + \"&threshold=\" +\n            WatsonConfig.authURL.wantsonVisualRecognition.threshold.toString()\n        return this.http.get(link) // ...using post request\n            .map((res) => {\n                return JSON.parse(res['_body']);\n            })\n            .catch((error: any) => {\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public getVisualRecognitonDataByOnlyURLWithHighConfidenceOnly(url): Observable<any> {\n        const link = WatsonConfig.authURL.wantsonVisualRecognition.baseLinkClassify +\n            WatsonConfig.authURL.wantsonVisualRecognition.api_key.toString() + \"&url=\" +\n            url +\n            \"&version=\" + WatsonConfig.authURL.wantsonVisualRecognition.version_date.toString()\n            + \"&threshold=\" +\n            WatsonConfig.authURL.wantsonVisualRecognition.threshold.toString()\n        const bodyObject = {};\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.get(link) // ...using post request\n            .map((res) => {\n                console.log('res issssss ', JSON.parse(res['_body']));\n                this.temp = JSON.parse(res['_body']);\n                console.log('temmppppp is',this.temp['images'][0]['classifiers'][0]['classes'][0]);\n                for (var i = 0; i < this.temp['images'][0]['classifiers'][0]['classes'].length; i++) {\n                    if(i===0){\n                        var store = this.temp['images'][0]['classifiers'][0]['classes'][i];\n                        console.log(store);\n                    }\n                    else{\n                        console.log(this.temp['images'][0]['classifiers'][0]['classes'][i]['score']);\n                        if(store['score']<this.temp['images'][0]['classifiers'][0]['classes'][i]['score'])\n                        {\n                            store = this.temp['images'][0]['classifiers'][0]['classes'][i];\n                            console.log('updated store val isss', store);\n                        }\n                    }\n                }\n                return store;\n            })\n            .catch((error: any) => {\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public getListOfCustomCreatedClassifiers(): Observable<any> {\n        const link = WatsonConfig.authURL.wantsonVisualRecognition.baseLinkClassifier +\n            WatsonConfig.authURL.wantsonVisualRecognition.api_key.toString() + \n            \"&version=\" + WatsonConfig.authURL.wantsonVisualRecognition.version_date.toString();\n        const bodyObject = {};\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.get(link) // ...using post request\n            .map((res) => {\n                return JSON.parse(res['_body']);\n            })\n            .catch((error: any) => {\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public getClassifiersDetails(classifier): Observable<any> {\n        const link = WatsonConfig.authURL.wantsonVisualRecognition.baseLink + classifier + '?api_key=' + WatsonConfig.authURL.wantsonVisualRecognition\n        .api_key + \"&version=\" + WatsonConfig.authURL.wantsonVisualRecognition.version_date.toString();\n        const bodyObject = {};\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.get(link) // ...using post request\n            .map((res) => {\n                return JSON.parse(res['_body']);\n            })\n            .catch((error: any) => {\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public deleteClassifiers(classifier): Observable<any> {\n        const link = WatsonConfig.authURL.wantsonVisualRecognition.baseLink + classifier + '?api_key=' + WatsonConfig.authURL.wantsonVisualRecognition\n        .api_key + \"&version=\" + WatsonConfig.authURL.wantsonVisualRecognition.version_date.toString();\n        return this.http.delete(link) \n            .map((res) => {\n                return JSON.parse(res['_body']);\n            })\n            .catch((error: any) => {\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/watsonServices/watsonVisualRecognition/watsonVisualRecognition.service.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { WatsonConfig } from '../watson.config';\nimport { Headers, Http, RequestOptions, Response } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class watsonTranslation {\n    constructor(\n        private http: Http\n    ){ }\n    \n    public translateToALanguage(text: string, lang: string): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.watsonTranslation.authUsername+\":\"+WatsonConfig.authURL.watsonTranslation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.watsonTranslation.baseLink;\n        const bodyObject = {\n            text: text,\n            model_id: lang\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link, bodyObject, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/watsonServices/watsonTranslation/watsonTranslation.service.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { WatsonConfig } from '../watson.config';\nimport { Headers, Http, RequestOptions, Response } from '@angular/http';\nimport { error } from 'util';\n@Injectable()\nexport class watsonConversation {\n \n    public constructor(public http: Http) {\n\n    }\n\n    public getWorkspace(): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.get(link, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public createWorkspace(name,intents,entities,language,description,dialog_nodes): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '?version=' + WatsonConfig.authURL.conversation.version_date;\n        const bodyObject = {\n            name,\n            intents,\n            entities,\n            language,\n            description,\n            dialog_nodes,\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link,bodyString,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public deleteWorkspace(workspaceid): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`,\n                'Accept': ' text/html'\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid\n         '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.delete(link,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public getWorkspaceById(workspaceid): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid\n         '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.get(link,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public updateWorkspace(name,intents,entities,language,description,dialog_nodes,workspaceid): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid\n         '?version=' + WatsonConfig.authURL.conversation.version_date;        const bodyObject = {\n            name,\n            intents,\n            entities,\n            language,\n            description,\n            dialog_nodes,\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link,bodyString,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public sendMessage(text,workspaceid): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + 'message' + '?version=' + WatsonConfig.authURL.conversation.version_date;\n        const bodyObject = {\n            input:{\n                text,\n            }\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link,bodyString,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public listCounterExamples (workspaceid): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'counterexamples' +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.get(link, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public createCounterExample(workspaceid,text): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'counterexamples' +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        const bodyObject = {\n            text,\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link,bodyString,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public deleteCounterExamples(workspaceid,text): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`,\n                'Accept': ' text/html'\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'counterexamples' +\n        + '/'+ text + '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.delete(link,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public getCounterExamples (workspaceid,text): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'counterexamples' + '/' + text +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.get(link, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public updateCounterExample(workspaceid,oldtext,newtext): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'counterexamples' + \n        '/' + 'counterexamples' + '/' + oldtext +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        const bodyObject = {\n            newtext,\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link,bodyString,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public listEntities (workspaceid): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'entities' +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.get(link, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public createEntities(workspaceid,entities,value): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'entities' +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        const bodyObject = {\n            entities,\n            value,\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link,bodyString,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public deleteEntity(workspaceid,entity): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`,\n                'Accept': ' text/html'\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'counterexamples' +\n        + '/entities/'+ entity + '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.delete(link,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public getEntity (workspaceid,entity): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'entities' + '/' + entity +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.get(link, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public updateEntity(workspaceid,entity,description): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'counterexamples' + \n        '/' + 'entities' + '/' + entity +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        const bodyObject = {\n            description,\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link,bodyString,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public listEntityValues (workspaceid, entity): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'entities' +\n        + '/' + entity + '/values' +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.get(link, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public addEntityValue(workspaceid,entity,value): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'entities' +\n        + '/' + entity + '/values' +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        const bodyObject = {\n            value,\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link,bodyString,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public deleteEntityValue(workspaceid,entity,value): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`,\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'entities' +\n        + '/' + entity + '/values' + '/' + value +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.delete(link,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public getEntityValue (workspaceid,entity,values): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'entities' +\n        + '/' + entity + '/values/' + values\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.get(link, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public updateEntityValue(workspaceid,entity,values,synonyms): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'entities' +\n        + '/' + entity + '/values/' + values\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        const bodyObject = {\n            synonyms,\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link,bodyString,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public listSynonyms (workspaceid, entity,value): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'entities' +\n        + '/' + entity + '/values/' + value + '/' + 'synonyms'\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.get(link, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public addSynonym(workspaceid,entity,value, synonym): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'entities' +\n        + '/' + entity + '/values/' + value + '/' + 'synonyms'\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        const bodyObject = {\n            synonym,\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link,bodyString,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public deleteSynonym(workspaceid,entity,value,synonym): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`,\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'entities' +\n        + '/' + entity + '/values/' + value + '/' + 'synonyms' + '/' + synonym +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.delete(link,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public getSynonyms (workspaceid, entity,value, synonym): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'entities' +\n        + '/' + entity + '/values/' + value + '/' + 'synonyms' + '/' + synonym +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.get(link, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public updateSynonym(workspaceid,entity,value, oldsynonym,synonym): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'entities' +\n        + '/' + entity + '/values/' + value + '/' + 'synonyms' + '/' + oldsynonym +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        const bodyObject = {\n            synonym,\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link,bodyString,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n    \n    public listIntents (workspaceid): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'intents' +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.get(link, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public createIntents(workspaceid,intent,examples): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'intents' +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        const bodyObject = {\n            intent,\n            examples,\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link,bodyString,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public deleteIntent(workspaceid,intent): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`,\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'intents' +\n        + '/' + intent +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.delete(link,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public getIntents (workspaceid, intent): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'intents' +\n        + '/' + intent +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.get(link, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public updateIntent(workspaceid,oldintent,intent,examples): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'intents' +\n        + '/' + oldintent +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        const bodyObject = {\n            intent,\n            examples\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link,bodyString,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public listDialogNodes (workspaceid): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'dialog_nodes' +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.get(link, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n\n    public createDialogNode(workspaceid,dialog_node,conditions,output,title): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'dialog_nodes' +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        const bodyObject = {\n            dialog_node,\n            conditions,\n            output,\n            title\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link,bodyString,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public deleteDialogNode(workspaceid,dialog_node): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`,\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'dialog_nodes' + '/' +\n        dialog_node + '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.delete(link,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public getDialogNodes (workspaceid,dialog_node): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'dialog_nodes' + '/' +\n        dialog_node + '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.get(link, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public updateDialogNode(workspaceid,dialog_node,conditions,output,title): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'dialog_nodes' + '/' +\n        dialog_node + '?version=' + WatsonConfig.authURL.conversation.version_date;\n        const bodyObject = {\n            output\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link,bodyString,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public listLogEventsInWorkSpace (workspaceid): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'logs' +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.get(link, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n    public listLogEventsInAllWorkSpace (workspaceid): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLink +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.get(link, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public listExamples (workspaceid,intent): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'intent' +\n        '/' + 'examples'+\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.get(link, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public createExamples(workspaceid,intent,text): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'intent' +\n        '/' + 'examples'+\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        const bodyObject = {\n            text\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link,bodyString,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public deleteExamples(workspaceid,intent,text): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`,\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'intent' +\n        '/' + 'examples'+ '/' + text + \n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.delete(link,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public getExamples (workspaceid,intent,text): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'intent' +\n        '/' + 'examples'+ '/' + text + \n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.get(link, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public updateExamples(workspaceid,intent,oldtext,text): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'intent' +\n        '/' + 'examples'+ '/' + oldtext + \n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        const bodyObject = {\n            text\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link,bodyString,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/watsonServices/watsonConversation/watsonConversation.service.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport {  ConnectionBackend } from '@angular/http';\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport { WatsonModule} from '../watsonServices/watson.module';\nimport { Http} from '@angular/http';\nimport {HttpModule} from '@angular/http';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp),\n    WatsonModule,\n    HttpModule,\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    \n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = HomePage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","export class WatsonConfig {\n    public static authURL = {\n        wantsonVisualRecognition:{\n            api_key: \"5dd5250c79742263cd33e095cc938d1a0952d690\",\n            version_date: \"2016-05-20\",\n            threshold: 0,\n            baseLinkClassify: \"https://gateway-a.watsonplatform.net/visual-recognition/api/v3/classify?api_key=\",\n            baseLinkClassifyFace: \"https://gateway-a.watsonplatform.net/visual-recognition/api/v3/detect_faces?api_key=\",\n            baseLinkClassifier: \"https://gateway-a.watsonplatform.net/visual-recognition/api/v3/classifiers?api_key=\",\n            baseLink:\"https://gateway-a.watsonplatform.net/visual-recognition/api/v3/classifiers/\"\n        },\n        watsonTranslation:{\n            authUsername: \"55b4673e-be7d-4d06-9c50-0fd7867b40b2\",\n            authPassword: \"QRGgAh6DY22n\",\n            baseLink: \"https://gateway.watsonplatform.net/language-translator/api/v2/translate\"\n        },\n        toneAnalyzer:{\n            authUsername: \"93eccd0e-13d9-4608-a6b0-adb1ffe368ab\",\n            authPassword: \"s1TbeXdgMaDB\",\n            baseLink: \"https://gateway.watsonplatform.net/tone-analyzer/api/v3/tone?version=\",\n            version_date: \"2017-09-21\"\n        },\n        conversation:{\n            authUsername: \"4677f4f0-fde3-41ad-987a-ce10bd553252\",\n            authPassword: \"0OMHKrwnyawh\",\n            baseLinkWorkspace: \"https://gateway.watsonplatform.net/conversation/api/v1/workspaces\",\n            baseLink: \"https://gateway.watsonplatform.net/conversation/api/v1/logs\",\n            version_date: \"2018-02-16\"\n        },\n    }\n    public  constructor() {\n\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/watsonServices/watson.config.ts","import {  NgModule } from '@angular/core';\nimport { watsonAuthService } from './auth.service';\nimport { watsonVisualRecognition } from './watsonVisualRecognition/watsonVisualRecognition.service';\nimport { watsonTranslation } from './watsonTranslation/watsonTranslation.service';\nimport { watsonToneAnalyzer } from './watsonToneAnalyzer/watsonToneAnalyzer.service';\nimport { watsonConversation } from './watsonConversation/watsonConversation.service';\n\n@NgModule({\n  declarations: [\n   \n  ],\n  imports: [\n  \n  ],\n  entryComponents: [\n   \n  ],\n  providers: [\n    watsonAuthService,\n    watsonVisualRecognition,\n    watsonTranslation,\n    watsonToneAnalyzer,\n    watsonConversation,\n  ]\n})\nexport class WatsonModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/watsonServices/watson.module.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { WatsonConfig } from './watson.config';\n@Injectable()\nexport class watsonAuthService {\n    public constructor() {\n\n    }\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/watsonServices/auth.service.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { WatsonConfig } from '../watson.config';\nimport { Headers, Http, RequestOptions, Response } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class watsonToneAnalyzer {\n    constructor(\n        private http: Http\n    ){ }\n    \n    public analyzeToneOnGivenText(text: string): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.toneAnalyzer.authUsername+\":\"+WatsonConfig.authURL.toneAnalyzer.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.toneAnalyzer.baseLink + WatsonConfig.authURL.toneAnalyzer.version_date;\n        const bodyObject = {\n            text: text\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link, bodyObject, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    // check on this function what is it???\n    public analyzeToneOnGivenTextWithDifferentLanguageResponse(text: string, lang: string): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.toneAnalyzer.authUsername+\":\"+WatsonConfig.authURL.toneAnalyzer.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`,\n                'Accept-Language': lang\n            })\n        });\n        const link = WatsonConfig.authURL.toneAnalyzer.baseLink + WatsonConfig.authURL.toneAnalyzer.version_date;\n        const bodyObject = {\n            text: text,\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link, bodyObject, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/watsonServices/watsonToneAnalyzer/watsonToneAnalyzer.service.ts"],"sourceRoot":""}
=======
{"version":3,"sources":["../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/pages/home/home.ts","../../src/watsonServices/watsonVisualRecognition/watsonVisualRecognition.service.ts","../../src/watsonServices/watsonTranslation/watsonTranslation.service.ts","../../src/watsonServices/watsonConversation/watsonConversation.service.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/watsonServices/watson.module.ts","../../src/watsonServices/auth.service.ts","../../src/watsonServices/watsonToneAnalyzer/watsonToneAnalyzer.service.ts","../../src/watsonServices/watson.config.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 163;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 163\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 208;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 208\n// module chunks = 0","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { watsonVisualRecognition } from '../../watsonServices/watsonVisualRecognition/watsonVisualRecognition.service'\nimport { watsonTranslation } from '../../watsonServices/watsonTranslation/watsonTranslation.service'\nimport { watsonConversation } from '../../watsonServices/watsonConversation/watsonConversation.service'\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n  public show:any=\"nothing\";\n  public appTitle:any=\"Watsonic\";\n  public watsonLogo:any=\"../../assets/imgs/brand.png\";\n  public videoPlaceholder:any=\"../../assets/imgs/static.png\";\n  public watsonVideoHD:any=\"../../assets/videos/IBM_Watson_Ambient_720.mp4\";\n  public watsonVideoMobile:any=\"../../assets/videos/ibm_watson_logo_inverse_small.mp4\";\n  public visualRecognition:any=\"../../assets/imgs/visual_recognition.svg\";\n  public randomImage: string = \"https://d17fnq9dkz9hgj.cloudfront.net/uploads/2012/11/144966156-adoptable-cat-photo-tips-632x475.jpg\"\n  public url: string = \"https://d17fnq9dkz9hgj.cloudfront.net/uploads/2012/11/144966156-adoptable-cat-photo-tips-632x475.jpg\";\n  constructor(public WatsonConversation: watsonConversation,public navCtrl: NavController, public WatsonVisualRecognition: watsonVisualRecognition, public WatsonTranslation: watsonTranslation) {\n  }\n\n  ionViewDidLoad() {\n\n    var videoFile = \"\";\n    if (window.innerWidth <= 768) {\n        videoFile = this.watsonVideoMobile;\n        document.querySelector('source').setAttribute('src', videoFile);\n    }\n    else if (window.innerWidth > 768) {\n        videoFile = this.watsonVideoHD;\n        console.log(videoFile);\n        document.querySelector('source').setAttribute('src', videoFile);\n    }\n\n    this.WatsonConversation.getWorkspace().subscribe((data) => {\n      console.log('data', data);\n    },\n    (error) => {\n        console.log(error);\n    });\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { WatsonConfig } from '../watson.config';\nimport { Headers, Http, RequestOptions, Response } from '@angular/http';\nimport { error } from 'util';\n@Injectable()\nexport class watsonVisualRecognition {\n \n    public parameters: any;\n    public params: any;\n    public temp:any;\n\n    public constructor(public http: Http) {\n        this.parameters = {};\n        this.params = {};\n    }\n\n    public getVisualRecognitonDataByOnlyURL(url): Observable<any> {\n        const link = WatsonConfig.authURL.wantsonVisualRecognition.baseLinkClassify +\n            WatsonConfig.authURL.wantsonVisualRecognition.api_key.toString() + \"&url=\" +\n            url +\n            \"&version=\" + WatsonConfig.authURL.wantsonVisualRecognition.version_date.toString()\n            + \"&threshold=\" +\n            WatsonConfig.authURL.wantsonVisualRecognition.threshold.toString()\n        return this.http.get(link) // ...using post request\n            .map((res) => {\n                return JSON.parse(res['_body']);\n            })\n            .catch((error: any) => {\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public getVisualRecognitonDataByOnlyURLWithHighConfidenceOnly(url): Observable<any> {\n        const link = WatsonConfig.authURL.wantsonVisualRecognition.baseLinkClassify +\n            WatsonConfig.authURL.wantsonVisualRecognition.api_key.toString() + \"&url=\" +\n            url +\n            \"&version=\" + WatsonConfig.authURL.wantsonVisualRecognition.version_date.toString()\n            + \"&threshold=\" +\n            WatsonConfig.authURL.wantsonVisualRecognition.threshold.toString()\n        const bodyObject = {};\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.get(link) // ...using post request\n            .map((res) => {\n                console.log('res issssss ', JSON.parse(res['_body']));\n                this.temp = JSON.parse(res['_body']);\n                console.log('temmppppp is',this.temp['images'][0]['classifiers'][0]['classes'][0]);\n                for (var i = 0; i < this.temp['images'][0]['classifiers'][0]['classes'].length; i++) {\n                    if(i===0){\n                        var store = this.temp['images'][0]['classifiers'][0]['classes'][i];\n                        console.log(store);\n                    }\n                    else{\n                        console.log(this.temp['images'][0]['classifiers'][0]['classes'][i]['score']);\n                        if(store['score']<this.temp['images'][0]['classifiers'][0]['classes'][i]['score'])\n                        {\n                            store = this.temp['images'][0]['classifiers'][0]['classes'][i];\n                            console.log('updated store val isss', store);\n                        }\n                    }\n                }\n                return store;\n            })\n            .catch((error: any) => {\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public getListOfCustomCreatedClassifiers(): Observable<any> {\n        const link = WatsonConfig.authURL.wantsonVisualRecognition.baseLinkClassifier +\n            WatsonConfig.authURL.wantsonVisualRecognition.api_key.toString() + \n            \"&version=\" + WatsonConfig.authURL.wantsonVisualRecognition.version_date.toString();\n        const bodyObject = {};\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.get(link) // ...using post request\n            .map((res) => {\n                return JSON.parse(res['_body']);\n            })\n            .catch((error: any) => {\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public getClassifiersDetails(classifier): Observable<any> {\n        const link = WatsonConfig.authURL.wantsonVisualRecognition.baseLink + classifier + '?api_key=' + WatsonConfig.authURL.wantsonVisualRecognition\n        .api_key + \"&version=\" + WatsonConfig.authURL.wantsonVisualRecognition.version_date.toString();\n        const bodyObject = {};\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.get(link) // ...using post request\n            .map((res) => {\n                return JSON.parse(res['_body']);\n            })\n            .catch((error: any) => {\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public deleteClassifiers(classifier): Observable<any> {\n        const link = WatsonConfig.authURL.wantsonVisualRecognition.baseLink + classifier + '?api_key=' + WatsonConfig.authURL.wantsonVisualRecognition\n        .api_key + \"&version=\" + WatsonConfig.authURL.wantsonVisualRecognition.version_date.toString();\n        return this.http.delete(link) \n            .map((res) => {\n                return JSON.parse(res['_body']);\n            })\n            .catch((error: any) => {\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/watsonServices/watsonVisualRecognition/watsonVisualRecognition.service.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { WatsonConfig } from '../watson.config';\nimport { Headers, Http, RequestOptions, Response } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class watsonTranslation {\n    constructor(\n        private http: Http\n    ){ }\n    \n    public translateToALanguage(text: string, lang: string): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.watsonTranslation.authUsername+\":\"+WatsonConfig.authURL.watsonTranslation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.watsonTranslation.baseLink;\n        const bodyObject = {\n            text: text,\n            model_id: lang\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link, bodyObject, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/watsonServices/watsonTranslation/watsonTranslation.service.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { WatsonConfig } from '../watson.config';\nimport { Headers, Http, RequestOptions, Response } from '@angular/http';\nimport { error } from 'util';\n@Injectable()\nexport class watsonConversation {\n \n    public constructor(public http: Http) {\n\n    }\n\n    public getWorkspace(): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.get(link, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public createWorkspace(name,intents,entities,language,description,dialog_nodes): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '?version=' + WatsonConfig.authURL.conversation.version_date;\n        const bodyObject = {\n            name,\n            intents,\n            entities,\n            language,\n            description,\n            dialog_nodes,\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link,bodyString,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public deleteWorkspace(workspaceid): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`,\n                'Accept': ' text/html'\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid\n         '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.delete(link,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public getWorkspaceById(workspaceid): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid\n         '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.get(link,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public updateWorkspace(name,intents,entities,language,description,dialog_nodes,workspaceid): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid\n         '?version=' + WatsonConfig.authURL.conversation.version_date;        const bodyObject = {\n            name,\n            intents,\n            entities,\n            language,\n            description,\n            dialog_nodes,\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link,bodyString,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public sendMessage(text,workspaceid): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + 'message' + '?version=' + WatsonConfig.authURL.conversation.version_date;\n        const bodyObject = {\n            input:{\n                text,\n            }\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link,bodyString,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public listCounterExamples (workspaceid): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'counterexamples' +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.get(link, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public createCounterExample(workspaceid,text): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'counterexamples' +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        const bodyObject = {\n            text,\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link,bodyString,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public deleteCounterExamples(workspaceid,text): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`,\n                'Accept': ' text/html'\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'counterexamples' +\n        + '/'+ text + '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.delete(link,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public getCounterExamples (workspaceid,text): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'counterexamples' + '/' + text +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.get(link, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public updateCounterExample(workspaceid,oldtext,newtext): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'counterexamples' + \n        '/' + 'counterexamples' + '/' + oldtext +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        const bodyObject = {\n            newtext,\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link,bodyString,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public listEntities (workspaceid): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'entities' +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.get(link, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public createEntities(workspaceid,entities,value): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'entities' +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        const bodyObject = {\n            entities,\n            value,\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link,bodyString,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public deleteEntity(workspaceid,entity): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`,\n                'Accept': ' text/html'\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'counterexamples' +\n        + '/entities/'+ entity + '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.delete(link,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public getEntity (workspaceid,entity): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'entities' + '/' + entity +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.get(link, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public updateEntity(workspaceid,entity,description): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'counterexamples' + \n        '/' + 'entities' + '/' + entity +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        const bodyObject = {\n            description,\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link,bodyString,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public listEntityValues (workspaceid, entity): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'entities' +\n        + '/' + entity + '/values' +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.get(link, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public addEntityValue(workspaceid,entity,value): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'entities' +\n        + '/' + entity + '/values' +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        const bodyObject = {\n            value,\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link,bodyString,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public deleteEntityValue(workspaceid,entity,value): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`,\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'entities' +\n        + '/' + entity + '/values' + '/' + value +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.delete(link,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public getEntityValue (workspaceid,entity,values): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'entities' +\n        + '/' + entity + '/values/' + values\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.get(link, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public updateEntityValue(workspaceid,entity,values,synonyms): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'entities' +\n        + '/' + entity + '/values/' + values\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        const bodyObject = {\n            synonyms,\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link,bodyString,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public listSynonyms (workspaceid, entity,value): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'entities' +\n        + '/' + entity + '/values/' + value + '/' + 'synonyms'\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.get(link, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public addSynonym(workspaceid,entity,value, synonym): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'entities' +\n        + '/' + entity + '/values/' + value + '/' + 'synonyms'\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        const bodyObject = {\n            synonym,\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link,bodyString,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public deleteSynonym(workspaceid,entity,value,synonym): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`,\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'entities' +\n        + '/' + entity + '/values/' + value + '/' + 'synonyms' + '/' + synonym +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.delete(link,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public getSynonyms (workspaceid, entity,value, synonym): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'entities' +\n        + '/' + entity + '/values/' + value + '/' + 'synonyms' + '/' + synonym +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.get(link, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public updateSynonym(workspaceid,entity,value, oldsynonym,synonym): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'entities' +\n        + '/' + entity + '/values/' + value + '/' + 'synonyms' + '/' + oldsynonym +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        const bodyObject = {\n            synonym,\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link,bodyString,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n    \n    public listIntents (workspaceid): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'intents' +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.get(link, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public createIntents(workspaceid,intent,examples): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'intents' +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        const bodyObject = {\n            intent,\n            examples,\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link,bodyString,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public deleteIntent(workspaceid,intent): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`,\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'intents' +\n        + '/' + intent +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.delete(link,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public getIntents (workspaceid, intent): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'intents' +\n        + '/' + intent +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.get(link, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public updateIntent(workspaceid,oldintent,intent,examples): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'intents' +\n        + '/' + oldintent +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        const bodyObject = {\n            intent,\n            examples\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link,bodyString,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public listDialogNodes (workspaceid): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'dialog_nodes' +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.get(link, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n\n    public createDialogNode(workspaceid,dialog_node,conditions,output,title): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'dialog_nodes' +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        const bodyObject = {\n            dialog_node,\n            conditions,\n            output,\n            title\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link,bodyString,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public deleteDialogNode(workspaceid,dialog_node): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`,\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'dialog_nodes' + '/' +\n        dialog_node + '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.delete(link,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public getDialogNodes (workspaceid,dialog_node): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'dialog_nodes' + '/' +\n        dialog_node + '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.get(link, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public updateDialogNode(workspaceid,dialog_node,conditions,output,title): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'dialog_nodes' + '/' +\n        dialog_node + '?version=' + WatsonConfig.authURL.conversation.version_date;\n        const bodyObject = {\n            output\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link,bodyString,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public listLogEventsInWorkSpace (workspaceid): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'logs' +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.get(link, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n    public listLogEventsInAllWorkSpace (workspaceid): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLink +\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.get(link, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public listExamples (workspaceid,intent): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'intent' +\n        '/' + 'examples'+\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.get(link, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public createExamples(workspaceid,intent,text): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'intent' +\n        '/' + 'examples'+\n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        const bodyObject = {\n            text\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link,bodyString,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public deleteExamples(workspaceid,intent,text): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`,\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'intent' +\n        '/' + 'examples'+ '/' + text + \n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.delete(link,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public getExamples (workspaceid,intent,text): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'intent' +\n        '/' + 'examples'+ '/' + text + \n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        return this.http.get(link, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    public updateExamples(workspaceid,intent,oldtext,text): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.conversation.authUsername+\":\"+WatsonConfig.authURL.conversation.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.conversation.baseLinkWorkspace + '/' + workspaceid + '/' + 'intent' +\n        '/' + 'examples'+ '/' + oldtext + \n        '?version=' + WatsonConfig.authURL.conversation.version_date;\n        const bodyObject = {\n            text\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link,bodyString,options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/watsonServices/watsonConversation/watsonConversation.service.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { AndroidFullScreen } from '@ionic-native/android-full-screen';\nimport { ConnectionBackend } from '@angular/http';\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport { WatsonModule} from '../watsonServices/watson.module';\nimport { Http} from '@angular/http';\nimport {HttpModule} from '@angular/http';\n\nvar config = {\n  statusbarPadding: true\n}\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp, config),\n    WatsonModule,\n    HttpModule,\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    AndroidFullScreen,\n    \n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { AndroidFullScreen } from '@ionic-native/android-full-screen';\n//import { SplashScreen } from '@ionic-native/splash-screen';\n//import { MenuController } from 'ionic-angular';\n\nimport { HomePage } from '../pages/home/home';\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = HomePage;\n  pages: Array<{ title: string, component: any }>;\n  \n\n  constructor(platform: Platform, statusBar: StatusBar, androidFullScreen: AndroidFullScreen) {\n    if (platform.is('android')) {\n      androidFullScreen.isImmersiveModeSupported()\n        .then(() => androidFullScreen.immersiveMode())\n        .catch((error: any) => console.log(error));\n    } else {\n      platform.ready().then(() => {\n        if (statusBar) {\n          console.log(statusBar);\n          statusBar.hide();\n        }\n      });\n    }\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import {  NgModule } from '@angular/core';\nimport { watsonAuthService } from './auth.service';\nimport { watsonVisualRecognition } from './watsonVisualRecognition/watsonVisualRecognition.service';\nimport { watsonTranslation } from './watsonTranslation/watsonTranslation.service';\nimport { watsonToneAnalyzer } from './watsonToneAnalyzer/watsonToneAnalyzer.service';\nimport { watsonConversation } from './watsonConversation/watsonConversation.service';\n\n@NgModule({\n  declarations: [\n   \n  ],\n  imports: [\n  \n  ],\n  entryComponents: [\n   \n  ],\n  providers: [\n    watsonAuthService,\n    watsonVisualRecognition,\n    watsonTranslation,\n    watsonToneAnalyzer,\n    watsonConversation,\n  ]\n})\nexport class WatsonModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/watsonServices/watson.module.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { WatsonConfig } from './watson.config';\n@Injectable()\nexport class watsonAuthService {\n    public constructor() {\n\n    }\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/watsonServices/auth.service.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { WatsonConfig } from '../watson.config';\nimport { Headers, Http, RequestOptions, Response } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class watsonToneAnalyzer {\n    constructor(\n        private http: Http\n    ){ }\n    \n    public analyzeToneOnGivenText(text: string): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.toneAnalyzer.authUsername+\":\"+WatsonConfig.authURL.toneAnalyzer.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`\n            })\n        });\n        const link = WatsonConfig.authURL.toneAnalyzer.baseLink + WatsonConfig.authURL.toneAnalyzer.version_date;\n        const bodyObject = {\n            text: text\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link, bodyObject, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n\n    // check on this function what is it???\n    public analyzeToneOnGivenTextWithDifferentLanguageResponse(text: string, lang: string): Observable<any> {\n        const token = btoa(WatsonConfig.authURL.toneAnalyzer.authUsername+\":\"+WatsonConfig.authURL.toneAnalyzer.authPassword);\n        const options = new RequestOptions({\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${token}`,\n                'Accept-Language': lang\n            })\n        });\n        const link = WatsonConfig.authURL.toneAnalyzer.baseLink + WatsonConfig.authURL.toneAnalyzer.version_date;\n        const bodyObject = {\n            text: text,\n        };\n        const bodyString = JSON.stringify(bodyObject); // Stringify payload\n        return this.http.post(link, bodyObject, options) // ...using post request\n            .map((res: Response) => res.json())\n            .catch((error: any) => {\n                console.log(error);\n                return Observable.throw(error.json().error || 'Server error');\n            });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/watsonServices/watsonToneAnalyzer/watsonToneAnalyzer.service.ts","export class WatsonConfig {\n    public static authURL = {\n        wantsonVisualRecognition:{\n            api_key: \"5dd5250c79742263cd33e095cc938d1a0952d690\",\n            version_date: \"2016-05-20\",\n            threshold: 0,\n            baseLinkClassify: \"https://gateway-a.watsonplatform.net/visual-recognition/api/v3/classify?api_key=\",\n            baseLinkClassifyFace: \"https://gateway-a.watsonplatform.net/visual-recognition/api/v3/detect_faces?api_key=\",\n            baseLinkClassifier: \"https://gateway-a.watsonplatform.net/visual-recognition/api/v3/classifiers?api_key=\",\n            baseLink:\"https://gateway-a.watsonplatform.net/visual-recognition/api/v3/classifiers/\"\n        },\n        watsonTranslation:{\n            authUsername: \"55b4673e-be7d-4d06-9c50-0fd7867b40b2\",\n            authPassword: \"QRGgAh6DY22n\",\n            baseLink: \"https://gateway.watsonplatform.net/language-translator/api/v2/translate\"\n        },\n        toneAnalyzer:{\n            authUsername: \"93eccd0e-13d9-4608-a6b0-adb1ffe368ab\",\n            authPassword: \"s1TbeXdgMaDB\",\n            baseLink: \"https://gateway.watsonplatform.net/tone-analyzer/api/v3/tone?version=\",\n            version_date: \"2017-09-21\"\n        },\n        conversation:{\n            authUsername: \"4677f4f0-fde3-41ad-987a-ce10bd553252\",\n            authPassword: \"0OMHKrwnyawh\",\n            baseLinkWorkspace: \"https://gateway.watsonplatform.net/conversation/api/v1/workspaces\",\n            baseLink: \"https://gateway.watsonplatform.net/conversation/api/v1/logs\",\n            version_date: \"2018-02-16\"\n        },\n    }\n    public  constructor() {\n\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/watsonServices/watson.config.ts"],"sourceRoot":""}
>>>>>>> frontend
